{"ast":null,"code":"var _jsxFileName = \"/Users/hasanyilmaz/Desktop/todo-app/src/components/Todo.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo({\n  text,\n  todos,\n  setTodos,\n  todo\n}) {\n  //? todos içine yazdığımız todo ları silmek için kullancağımız fonksiyon\n  const deleteHandler = () => {\n    //? kullanıcının eklemiş olduğu bilgileri değiştirmek için set kullanıcaz\n    //? Eğer todoList den gönderdiğimiz id todo da eşitse silecek\n    //? Bunun için filter kullanıcaz\n    //* Eğer id si el e eşitse todo ya gönderecek eğer değilse silecek ve tekrar listeyi bize gösterecek\n    setTodos(todos.filter(el => el.id !== todo.id));\n  };\n  const completeHandler = () => {\n    //? Yine aynı işlemi yaparak bu sefer tamamlanan görevleri belirtmek için işareti devreye sokucaz\n    //? Tüm elemanları filtreliyoruz ki yalnızca tamamlanmamış olanlara erişebilelim\n    //? Bu filitrelenmiş liste üzerinden map ile her bir elemente tek tek geliyorum (map dönüşteki parametre olarak verilen index değerini alır.)\n    setTodos(todos.map(item => {\n      //? Bunu yapabilmemizi sağlayacak bir if koşulu var\n      //? seçtiğimiz id deki görev tamamlanmışsa todo da tutucaz ve işaretliyicez\n      if (item.id === todo.id) ;\n      {\n        return {\n          //? burada ... yı bir nesnenin tüm özelliklerini başka bir nesneye kopyalamak için kullanıyoruz\n          //? yani item değişkenimizi tersine çeviriyoruz \n          //? yani şöyle ; !item.completed ifadesi bir mantıksal değeri tersine çeviriyor. \n          //? Burada, completed özelliğinin değeri true ise, !true işlemi gerçekleşeceği için sonuç false olur. \n          //? Eğer completed özelliğinin değeri false ise, !false işlemi gerçekleşeceği için sonuç true olur.\n          ...item,\n          completed: !item.completed\n        };\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"complete-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-check-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"todo-item\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"trash-btn\",\n      onClick: deleteHandler,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-minus-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Todo","text","todos","setTodos","todo","deleteHandler","filter","el","id","completeHandler","map","item","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/hasanyilmaz/Desktop/todo-app/src/components/Todo.jsx"],"sourcesContent":["import React from 'react'\n\nfunction Todo({ text, todos, setTodos, todo }) {\n    //? todos içine yazdığımız todo ları silmek için kullancağımız fonksiyon\n    const deleteHandler = () => {\n        //? kullanıcının eklemiş olduğu bilgileri değiştirmek için set kullanıcaz\n        //? Eğer todoList den gönderdiğimiz id todo da eşitse silecek\n        //? Bunun için filter kullanıcaz\n        //* Eğer id si el e eşitse todo ya gönderecek eğer değilse silecek ve tekrar listeyi bize gösterecek\n        setTodos(todos.filter((el) => el.id !== todo.id))\n    }\n    const completeHandler = () => {\n        //? Yine aynı işlemi yaparak bu sefer tamamlanan görevleri belirtmek için işareti devreye sokucaz\n        //? Tüm elemanları filtreliyoruz ki yalnızca tamamlanmamış olanlara erişebilelim\n        //? Bu filitrelenmiş liste üzerinden map ile her bir elemente tek tek geliyorum (map dönüşteki parametre olarak verilen index değerini alır.)\n        setTodos(todos.map((item) => {\n            //? Bunu yapabilmemizi sağlayacak bir if koşulu var\n            //? seçtiğimiz id deki görev tamamlanmışsa todo da tutucaz ve işaretliyicez\n            if (item.id === todo.id); {\n                return {\n                    //? burada ... yı bir nesnenin tüm özelliklerini başka bir nesneye kopyalamak için kullanıyoruz\n                    //? yani item değişkenimizi tersine çeviriyoruz \n                    //? yani şöyle ; !item.completed ifadesi bir mantıksal değeri tersine çeviriyor. \n                    //? Burada, completed özelliğinin değeri true ise, !true işlemi gerçekleşeceği için sonuç false olur. \n                    //? Eğer completed özelliğinin değeri false ise, !false işlemi gerçekleşeceği için sonuç true olur.\n                    ...item, completed: !item.completed\n                }\n            }\n        }))\n    }\n    return (\n        <div className=\"todo\">\n            <button className=\"complete-btn\">\n                <i className=\"fas fa-check-circle\"></i>\n            </button>\n            <li className=\"todo-item\">{text}</li>\n            <button className=\"trash-btn\" onClick={deleteHandler}>\n                <i className=\"fa fa-minus-circle\"></i>\n            </button>\n        </div>\n    )\n}\n\nexport default Todo\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,IAAIA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EAC3C;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB;IACA;IACA;IACA;IACAF,QAAQ,CAACD,KAAK,CAACI,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC,CAAC;EACrD,CAAC;EACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACA;IACA;IACAN,QAAQ,CAACD,KAAK,CAACQ,GAAG,CAAEC,IAAI,IAAK;MACzB;MACA;MACA,IAAIA,IAAI,CAACH,EAAE,KAAKJ,IAAI,CAACI,EAAE,EAAC;MAAE;QACtB,OAAO;UACH;UACA;UACA;UACA;UACA;UACA,GAAGG,IAAI;UAAEC,SAAS,EAAE,CAACD,IAAI,CAACC;QAC9B,CAAC;MACL;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;EACD,oBACIb,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBf,OAAA;MAAQc,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC5Bf,OAAA;QAAGc,SAAS,EAAC;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACTnB,OAAA;MAAIc,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEb;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrCnB,OAAA;MAAQc,SAAS,EAAC,WAAW;MAACM,OAAO,EAAEd,aAAc;MAAAS,QAAA,eACjDf,OAAA;QAAGc,SAAS,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACE,EAAA,GAvCQpB,IAAI;AAyCb,eAAeA,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}